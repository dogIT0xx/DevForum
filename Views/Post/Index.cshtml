@model PaginatedList<Post>

@{
    ViewData["Title"] = "Posts";
}

<div class="d-flex justify-content-between">
    <h3>Danh sách bài viết</h3>
    <a class="btn btn-primary" asp-controller="Post" asp-action="Create">
        Tạo bài viết mới
    </a>
</div>

@* Xử lí grid 1x12 *@
<div class="row align-content-center justify-content-start">
    @foreach (var item in Model)
    {
        var path = "https://firebasestorage.googleapis.com/v0/b/blogmvc-b2c63.appspot.com/o" + @item.PostImages[0].Path + "?alt=media";

        <div class="card mb-3 col-md-11" style="width: 735px; height:200px">
            <div class="row g-0">
                <div class="col-md-8">
                    <div class="card-body">
                        <h5 class="card-title">
                            <a asp-controller="Post" asp-action="Details" asp-route-id="@item.Id">
                                @Html.DisplayFor(modelItem => item.Title)
                            </a>
                        </h5>
                        <p class="card-text">Người đăng: @Html.DisplayFor(modelItem => item.Author.UserName)</p>
                        <p class="card-text"><small class="text-body-secondary">Đăng lúc: @Html.DisplayFor(modelItem => item.CreateAt)</small></p>
                        <ul class="list-group list-group-flush list-group-horizontal-sm ">
                            @foreach (var classify in item.PostClassifies)
                            {
                                <li class="list-group-item">
                                    <a class="btn btn-secondary btn-sm" href="#" role="button">@Html.DisplayFor(tag => classify.Tag.Name)</a>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
                <div class="col-md-4 my-auto">
                    <img src="@path" class="img-fluid rounded" alt="...">
                </div>
            </div>
        </div>
    }
</div>

@if (Model.Count() != 0)
{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";

    <div class="d-flex justify-content-center">
        <ul class="pagination">
            <li class="page-item">
                <a asp-action="Index"
                   asp-route-pageNumber="@(Model.PageIndex - 1)"
                   asp-route-searchString="@ViewData["CurrentFilter"]"
                   class="page-link btn btn-default @prevDisabled">
                    Previous
                </a>
            </li>
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                @if (Model.PageIndex == i)
                {
                    <li class="page-item active" aria-current="page">
                        <a class="page-link active"
                           asp-action="Index"
                           asp-route-pageNumber="@(i)"
                           asp-route-searchString="@ViewData["CurrentFilter"]">
                            @(i)
                        </a>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a class="page-link"
                           asp-action="Index"
                           asp-route-pageNumber="@(i)"
                           asp-route-searchString="@ViewData["CurrentFilter"]">
                            @(i)
                        </a>
                    </li>
                }
            }
            <li class="page-item">
                <a class="page-link btn btn-default @nextDisabled"
                   asp-action="Index"
                   asp-route-pageNumber="@(Model.PageIndex + 1)"
                   asp-route-searchString="@ViewData["CurrentFilter"]">
                    Next
                </a>
            </li>
        </ul>
    </div>
}